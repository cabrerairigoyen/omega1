name: Build Omega with Pi Stream App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential gcc-arm-none-eabi libfreetype6-dev jq dfu-util
        pip install intelhex
    
    - name: Build Omega
      run: |
        make OMEGA_USERNAME="PiStream" clean
        make OMEGA_USERNAME="PiStream" PLATFORM=device TARGET=n0110
    
    - name: Find and convert binaries to DFU
      run: |
        echo "=== Finding generated files ==="
        find . -name "*dfu*.bin" -o -name "*.dfu"
        
        echo "=== Converting external binary to DFU ==="
        if [ -f "output/release/device/n0110/dfu-external.bin" ]; then
          echo "Found dfu-external.bin, converting to DFU format..."
          # Use dfu-suffix to add DFU suffix
          cp output/release/device/n0110/dfu-external.bin omega-external.bin
          dfu-suffix -a omega-external.bin -v 0x0483 -p 0xA291
          mv omega-external.bin omega-external.dfu
          ls -la omega-external.dfu
        fi
        
        echo "=== All files found ==="
        find . -name "*.dfu" -o -name "*omega*" | head -10
    
    - name: Upload DFU file
      uses: actions/upload-artifact@v4
      with:
        name: omega-pistream-dfu
        path: |
          omega-external.dfu
          **/*.dfu
        if-no-files-found: warn