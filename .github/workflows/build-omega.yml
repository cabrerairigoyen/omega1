name: Build Omega with Pi Stream App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential gcc-arm-none-eabi libfreetype6-dev jq dfu-util
        pip install intelhex
    
    - name: Build Omega
      run: |
        make OMEGA_USERNAME="PiStream" clean
        make OMEGA_USERNAME="PiStream" PLATFORM=device TARGET=n0110
    
    - name: Convert INTERNAL binary to DFU (compatible with your NumWorks)
      run: |
        echo "=== Using INTERNAL version for compatibility ==="
        find . -name "*dfu*.bin"
        
        if [ -f "output/release/device/n0110/dfu-internal.bin" ]; then
          echo "Converting dfu-internal.bin to DFU format..."
          cp output/release/device/n0110/dfu-internal.bin omega-internal.bin
          # Add DFU suffix with correct NumWorks vendor/product IDs
          dfu-suffix -a omega-internal.bin -v 0x0483 -p 0xA291
          mv omega-internal.bin omega.dfu
          ls -la omega.dfu
          file omega.dfu
          echo "✅ omega.dfu created successfully for internal memory!"
        else
          echo "❌ dfu-internal.bin not found"
          find . -name "*.bin" | head -10
        fi
    
    - name: Upload DFU file
      uses: actions/upload-artifact@v4
      with:
        name: omega-pistream-dfu-internal
        path: omega.dfu
        if-no-files-found: error